// <auto-generated />
using System;
using Cartsy.Api.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Cartsy.Api.Migrations
{
    [DbContext(typeof(CartsyContext))]
    [Migration("20230913003524_tenMockValuesEach")]
    partial class tenMockValuesEach
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Cartsy.Api.Entities.AdditionalServices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Price")
                        .HasPrecision(2, 10)
                        .HasColumnType("double precision");

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("AdditionalServices");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Price = 6.9900000000000002,
                            Service = "Standard Ground Shipping",
                            Type = "Shipping"
                        },
                        new
                        {
                            Id = 5,
                            Price = 12.0,
                            Service = "Premium Gift Wrapping Plus",
                            Type = "Packaging"
                        },
                        new
                        {
                            Id = 6,
                            Price = 3.5,
                            Service = "Extended Warranty Plus",
                            Type = "Warranty"
                        },
                        new
                        {
                            Id = 7,
                            Price = 7.9900000000000002,
                            Service = "Two-Day Shipping",
                            Type = "Shipping"
                        },
                        new
                        {
                            Id = 8,
                            Price = 10.0,
                            Service = "Eco-Friendly Packaging",
                            Type = "Packaging"
                        },
                        new
                        {
                            Id = 9,
                            Price = 5.0,
                            Service = "Basic Warranty",
                            Type = "Warranty"
                        },
                        new
                        {
                            Id = 10,
                            Price = 9.9900000000000002,
                            Service = "International Shipping",
                            Type = "Shipping"
                        },
                        new
                        {
                            Id = 1,
                            Price = 8.0,
                            Service = "Deluxe Gift Wrapping",
                            Type = "Packaging"
                        },
                        new
                        {
                            Id = 2,
                            Price = 4.5,
                            Service = "Extended Warranty Basic",
                            Type = "Warranty"
                        },
                        new
                        {
                            Id = 3,
                            Price = 14.99,
                            Service = "Express International Shipping",
                            Type = "Shipping"
                        });
                });

            modelBuilder.Entity("Cartsy.Api.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character(8)")
                        .IsFixedLength();

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character(2)")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CEP = "56789012",
                            City = "Chicago",
                            Number = 309,
                            State = "Illinois",
                            Street = "Michigan Ave",
                            UF = "IL"
                        },
                        new
                        {
                            Id = 2,
                            CEP = "67890123",
                            City = "Portland",
                            Number = 412,
                            State = "Oregon",
                            Street = "Pearl St",
                            UF = "OR"
                        },
                        new
                        {
                            Id = 3,
                            CEP = "78901234",
                            City = "Phoenix",
                            Number = 523,
                            State = "Arizona",
                            Street = "Desert Ave",
                            UF = "AZ"
                        },
                        new
                        {
                            Id = 4,
                            CEP = "89012345",
                            City = "Miami",
                            Number = 634,
                            State = "Florida",
                            Street = "Ocean Dr",
                            UF = "FL"
                        },
                        new
                        {
                            Id = 5,
                            CEP = "90123456",
                            City = "Nashville",
                            Number = 745,
                            State = "Tennessee",
                            Street = "Music Rd",
                            UF = "TN"
                        },
                        new
                        {
                            Id = 6,
                            CEP = "12345678",
                            City = "San Francisco",
                            Number = 123,
                            State = "California",
                            Street = "Market St",
                            UF = "CA"
                        },
                        new
                        {
                            Id = 7,
                            CEP = "87654321",
                            City = "Boston",
                            Number = 456,
                            State = "Massachusetts",
                            Street = "Commonwealth Ave",
                            UF = "MA"
                        },
                        new
                        {
                            Id = 8,
                            CEP = "23456789",
                            City = "Seattle",
                            Number = 789,
                            State = "Washington",
                            Street = "Pine St",
                            UF = "WA"
                        },
                        new
                        {
                            Id = 9,
                            CEP = "34567890",
                            City = "Austin",
                            Number = 101,
                            State = "Texas",
                            Street = "6th Street",
                            UF = "TX"
                        },
                        new
                        {
                            Id = 10,
                            CEP = "45678901",
                            City = "Denver",
                            Number = 210,
                            State = "Colorado",
                            Street = "Broadway St",
                            UF = "CO"
                        },
                        new
                        {
                            Id = 11,
                            CEP = "56789012",
                            City = "Chicago",
                            Number = 309,
                            State = "Illinois",
                            Street = "Michigan Ave",
                            UF = "IL"
                        },
                        new
                        {
                            Id = 12,
                            CEP = "67890123",
                            City = "Portland",
                            Number = 412,
                            State = "Oregon",
                            Street = "Pearl St",
                            UF = "OR"
                        },
                        new
                        {
                            Id = 13,
                            CEP = "78901234",
                            City = "Phoenix",
                            Number = 523,
                            State = "Arizona",
                            Street = "Desert Ave",
                            UF = "AZ"
                        },
                        new
                        {
                            Id = 14,
                            CEP = "89012345",
                            City = "Miami",
                            Number = 634,
                            State = "Florida",
                            Street = "Ocean Dr",
                            UF = "FL"
                        },
                        new
                        {
                            Id = 15,
                            CEP = "90123456",
                            City = "Nashville",
                            Number = 745,
                            State = "Tennessee",
                            Street = "Music Rd",
                            UF = "TN"
                        },
                        new
                        {
                            Id = 16,
                            CEP = "12345678",
                            City = "San Francisco",
                            Number = 123,
                            State = "California",
                            Street = "Market St",
                            UF = "CA"
                        },
                        new
                        {
                            Id = 17,
                            CEP = "87654321",
                            City = "Boston",
                            Number = 456,
                            State = "Massachusetts",
                            Street = "Commonwealth Ave",
                            UF = "MA"
                        },
                        new
                        {
                            Id = 18,
                            CEP = "23456789",
                            City = "Seattle",
                            Number = 789,
                            State = "Washington",
                            Street = "Pine St",
                            UF = "WA"
                        },
                        new
                        {
                            Id = 19,
                            CEP = "34567890",
                            City = "Austin",
                            Number = 101,
                            State = "Texas",
                            Street = "6th Street",
                            UF = "TX"
                        },
                        new
                        {
                            Id = 20,
                            CEP = "45678901",
                            City = "Denver",
                            Number = 210,
                            State = "Colorado",
                            Street = "Broadway St",
                            UF = "CO"
                        });
                });

            modelBuilder.Entity("Cartsy.Api.Entities.Consumer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("integer");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character(11)")
                        .IsFixedLength();

                    b.Property<string>("CellPhone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character(13)")
                        .IsFixedLength();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("HomePhone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character(13)")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.ToTable("Consumers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            CPF = "73473943096",
                            CellPhone = "123-456-7890",
                            Email = "linus@example.com",
                            HomePhone = "987-654-3210",
                            Name = "Linus Torvalds",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            CPF = "73473943096",
                            CellPhone = "123-456-7890",
                            Email = "rafa@pava.com",
                            HomePhone = "987-654-3210",
                            Name = "rafa pava",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 3,
                            CPF = "73473943096",
                            CellPhone = "123-456-7890",
                            Email = "ti@ago.com",
                            HomePhone = "987-654-3210",
                            Name = "ti ago",
                            Status = true
                        });
                });

            modelBuilder.Entity("Cartsy.Api.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("integer");

                    b.Property<string>("CellPhone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character(13)")
                        .IsFixedLength();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("HomePhone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character(13)")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<int>("TypeDiscriminator")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.ToTable("Customers", (string)null);

                    b.HasDiscriminator<int>("TypeDiscriminator");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Cartsy.Api.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<double>("Price")
                        .HasPrecision(2, 10)
                        .HasColumnType("double precision");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.Property<int>("StoreId")
                        .HasColumnType("integer");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.HasIndex("TypeId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Energy-efficient refrigerator",
                            Name = "Refrigerator",
                            Price = 799.99000000000001,
                            Stock = 25,
                            StoreId = 1,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Exquisite diamond necklace",
                            Name = "Diamond Necklace",
                            Price = 1499.99,
                            Stock = 10,
                            StoreId = 2,
                            TypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "Official NBA basketball",
                            Name = "Basketball",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 3,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            Description = "Official NBA basketball",
                            Name = "Item 4",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 3,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 5,
                            Description = "Official NBA basketball",
                            Name = "Item 5",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 3,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 6,
                            Description = "Official NBA basketball",
                            Name = "Item 6",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 3,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 7,
                            Description = "Official NBA basketball",
                            Name = "Item 7",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 3,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 8,
                            Description = "Official NBA basketball",
                            Name = "Item 8",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 3,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 9,
                            Description = "Official NBA basketball",
                            Name = "Item 9",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 3,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 10,
                            Description = "Official NBA basketball",
                            Name = "Item 10",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 2,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 11,
                            Description = "Official NBA basketball",
                            Name = "Item 11",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 2,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 12,
                            Description = "Official NBA basketball",
                            Name = "Item 12",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 2,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 13,
                            Description = "Official NBA basketball",
                            Name = "Item 13",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 2,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 14,
                            Description = "Official NBA basketball",
                            Name = "Item 14",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 2,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 15,
                            Description = "Official NBA basketball",
                            Name = "Item 15",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 2,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 16,
                            Description = "Official NBA basketball",
                            Name = "Item 16",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 1,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 17,
                            Description = "Official NBA basketball",
                            Name = "Item 17",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 1,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 18,
                            Description = "Official NBA basketball",
                            Name = "Item 18",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 1,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 19,
                            Description = "Official NBA basketball",
                            Name = "Item 19",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 1,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 20,
                            Description = "Official NBA basketball",
                            Name = "Item 20",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 1,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 21,
                            Description = "Official NBA basketball",
                            Name = "Item 21",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 1,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 22,
                            Description = "Official NBA basketball",
                            Name = "Item 22",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 1,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 23,
                            Description = "Official NBA basketball",
                            Name = "Item 23",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 1,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 24,
                            Description = "Official NBA basketball",
                            Name = "Item 24",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 1,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 25,
                            Description = "Official NBA basketball",
                            Name = "Item 25",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 1,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 26,
                            Description = "Official NBA basketball",
                            Name = "Item 26",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 1,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 27,
                            Description = "Official NBA basketball",
                            Name = "Item 27",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 1,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 28,
                            Description = "Official NBA basketball",
                            Name = "Item 28",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 1,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 29,
                            Description = "Official NBA basketball",
                            Name = "Item 29",
                            Price = 29.989999999999998,
                            Stock = 50,
                            StoreId = 1,
                            TypeId = 3
                        });
                });

            modelBuilder.Entity("Cartsy.Api.Entities.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Tax")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("ItemTypes");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Tax = 15,
                            Type = "Appliances"
                        },
                        new
                        {
                            Id = 5,
                            Tax = 7,
                            Type = "Jewelry"
                        },
                        new
                        {
                            Id = 6,
                            Tax = 8,
                            Type = "Sporting Goods"
                        },
                        new
                        {
                            Id = 7,
                            Tax = 10,
                            Type = "Home Accessories"
                        },
                        new
                        {
                            Id = 8,
                            Tax = 6,
                            Type = "Beauty Products"
                        },
                        new
                        {
                            Id = 9,
                            Tax = 0,
                            Type = "Food & Beverages"
                        },
                        new
                        {
                            Id = 10,
                            Tax = 5,
                            Type = "Office Supplies"
                        },
                        new
                        {
                            Id = 1,
                            Tax = 9,
                            Type = "Fragrances"
                        },
                        new
                        {
                            Id = 2,
                            Tax = 6,
                            Type = "Toiletries"
                        },
                        new
                        {
                            Id = 3,
                            Tax = 8,
                            Type = "Outdoor Gear"
                        });
                });

            modelBuilder.Entity("Cartsy.Api.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ConsumerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateDelivered")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Price")
                        .HasPrecision(2, 10)
                        .HasColumnType("double precision");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer");

                    b.Property<int>("StoreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ConsumerId");

                    b.HasIndex("StoreId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConsumerId = 1,
                            DateCreated = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2530),
                            DateDelivered = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 49.990000000000002,
                            StatusId = 1,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 2,
                            ConsumerId = 1,
                            DateCreated = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2530),
                            DateDelivered = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 29.989999999999998,
                            StatusId = 2,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 3,
                            ConsumerId = 1,
                            DateCreated = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2530),
                            DateDelivered = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 19.989999999999998,
                            StatusId = 3,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 4,
                            ConsumerId = 2,
                            DateCreated = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2530),
                            DateDelivered = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 39.990000000000002,
                            StatusId = 1,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 5,
                            ConsumerId = 2,
                            DateCreated = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2530),
                            DateDelivered = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 19.989999999999998,
                            StatusId = 2,
                            StoreId = 3
                        },
                        new
                        {
                            Id = 6,
                            ConsumerId = 2,
                            DateCreated = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2530),
                            DateDelivered = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 59.990000000000002,
                            StatusId = 3,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 7,
                            ConsumerId = 3,
                            DateCreated = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2530),
                            DateDelivered = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 29.989999999999998,
                            StatusId = 1,
                            StoreId = 3
                        },
                        new
                        {
                            Id = 8,
                            ConsumerId = 3,
                            DateCreated = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2540),
                            DateDelivered = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 49.990000000000002,
                            StatusId = 2,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 9,
                            ConsumerId = 3,
                            DateCreated = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2540),
                            DateDelivered = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 69.989999999999995,
                            StatusId = 3,
                            StoreId = 1
                        });
                });

            modelBuilder.Entity("Cartsy.Api.Entities.OrderItem", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.HasKey("ItemId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrdersItems", (string)null);

                    b.HasData(
                        new
                        {
                            ItemId = 4,
                            OrderId = 2,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2550)
                        },
                        new
                        {
                            ItemId = 5,
                            OrderId = 2,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2550)
                        },
                        new
                        {
                            ItemId = 6,
                            OrderId = 2,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2550)
                        },
                        new
                        {
                            ItemId = 7,
                            OrderId = 3,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2550)
                        },
                        new
                        {
                            ItemId = 8,
                            OrderId = 3,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2550)
                        },
                        new
                        {
                            ItemId = 9,
                            OrderId = 3,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2550)
                        },
                        new
                        {
                            ItemId = 10,
                            OrderId = 4,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2550)
                        },
                        new
                        {
                            ItemId = 11,
                            OrderId = 4,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2550)
                        },
                        new
                        {
                            ItemId = 12,
                            OrderId = 4,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2550)
                        },
                        new
                        {
                            ItemId = 13,
                            OrderId = 5,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2550)
                        },
                        new
                        {
                            ItemId = 14,
                            OrderId = 5,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2550)
                        },
                        new
                        {
                            ItemId = 15,
                            OrderId = 5,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2560)
                        },
                        new
                        {
                            ItemId = 16,
                            OrderId = 6,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2560)
                        },
                        new
                        {
                            ItemId = 17,
                            OrderId = 6,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2560)
                        },
                        new
                        {
                            ItemId = 18,
                            OrderId = 6,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2560)
                        },
                        new
                        {
                            ItemId = 19,
                            OrderId = 7,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2560)
                        },
                        new
                        {
                            ItemId = 20,
                            OrderId = 7,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2560)
                        },
                        new
                        {
                            ItemId = 21,
                            OrderId = 7,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2560)
                        },
                        new
                        {
                            ItemId = 22,
                            OrderId = 8,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2560)
                        },
                        new
                        {
                            ItemId = 23,
                            OrderId = 8,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2560)
                        },
                        new
                        {
                            ItemId = 24,
                            OrderId = 8,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2560)
                        },
                        new
                        {
                            ItemId = 25,
                            OrderId = 9,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2560)
                        },
                        new
                        {
                            ItemId = 26,
                            OrderId = 9,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2560)
                        },
                        new
                        {
                            ItemId = 27,
                            OrderId = 9,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2560)
                        });
                });

            modelBuilder.Entity("Cartsy.Api.Entities.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("OrderStatuses");

                    b.HasData(
                        new
                        {
                            Id = 7,
                            Status = "On Hold"
                        },
                        new
                        {
                            Id = 8,
                            Status = "Backordered"
                        },
                        new
                        {
                            Id = 9,
                            Status = "In Transit"
                        },
                        new
                        {
                            Id = 10,
                            Status = "Out for Delivery"
                        },
                        new
                        {
                            Id = 1,
                            Status = "Arrived at Destination"
                        },
                        new
                        {
                            Id = 2,
                            Status = "Delayed"
                        },
                        new
                        {
                            Id = 3,
                            Status = "Ready for Pickup"
                        },
                        new
                        {
                            Id = 4,
                            Status = "Awaiting Payment"
                        },
                        new
                        {
                            Id = 5,
                            Status = "Partially Shipped"
                        },
                        new
                        {
                            Id = 6,
                            Status = "Refunded"
                        });
                });

            modelBuilder.Entity("Cartsy.Api.Entities.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("integer");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 4,
                            CustomerId = 1,
                            Name = "Store 1"
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 5,
                            CustomerId = 2,
                            Name = "Store 2"
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 6,
                            CustomerId = 3,
                            Name = "Store 3"
                        },
                        new
                        {
                            Id = 4,
                            AddressId = 7,
                            CustomerId = 4,
                            Name = "Store 4"
                        });
                });

            modelBuilder.Entity("Cartsy.Api.Entities.StoreService", b =>
                {
                    b.Property<int>("ServicesId")
                        .HasColumnType("integer");

                    b.Property<int>("StoreId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.HasKey("ServicesId", "StoreId");

                    b.HasIndex("StoreId");

                    b.ToTable("StoresServices", (string)null);

                    b.HasData(
                        new
                        {
                            ServicesId = 1,
                            StoreId = 1,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2510)
                        },
                        new
                        {
                            ServicesId = 2,
                            StoreId = 1,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2510)
                        },
                        new
                        {
                            ServicesId = 1,
                            StoreId = 2,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2510)
                        },
                        new
                        {
                            ServicesId = 2,
                            StoreId = 2,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2510)
                        },
                        new
                        {
                            ServicesId = 1,
                            StoreId = 3,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2510)
                        },
                        new
                        {
                            ServicesId = 2,
                            StoreId = 3,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2510)
                        },
                        new
                        {
                            ServicesId = 1,
                            StoreId = 4,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2510)
                        },
                        new
                        {
                            ServicesId = 2,
                            StoreId = 4,
                            CreatedAt = new DateTime(2023, 9, 13, 0, 35, 24, 670, DateTimeKind.Utc).AddTicks(2510)
                        });
                });

            modelBuilder.Entity("Cartsy.Api.Entities.LegalCustomer", b =>
                {
                    b.HasBaseType("Cartsy.Api.Entities.Customer");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character(14)")
                        .IsFixedLength();

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue(1);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 4,
                            CellPhone = "234-567-8901",
                            Email = "legal1@example.com",
                            HomePhone = "876-543-2109",
                            Name = "Legal Customer 1",
                            Status = true,
                            TypeDiscriminator = 1,
                            CNPJ = "12345678901234",
                            Type = "legal"
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 5,
                            CellPhone = "234-567-8901",
                            Email = "legal2@example.com",
                            HomePhone = "876-543-2109",
                            Name = "Legal Customer 2",
                            Status = true,
                            TypeDiscriminator = 1,
                            CNPJ = "12345678901234",
                            Type = "legal"
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 6,
                            CellPhone = "234-567-8901",
                            Email = "legal3@example.com",
                            HomePhone = "876-543-2109",
                            Name = "Legal Customer 3",
                            Status = true,
                            TypeDiscriminator = 1,
                            CNPJ = "12345678901234",
                            Type = "legal"
                        },
                        new
                        {
                            Id = 4,
                            AddressId = 7,
                            CellPhone = "234-567-8901",
                            Email = "legal4@example.com",
                            HomePhone = "876-543-2109",
                            Name = "Legal Customer 4",
                            Status = true,
                            TypeDiscriminator = 1,
                            CNPJ = "12345678901234",
                            Type = "legal"
                        });
                });

            modelBuilder.Entity("Cartsy.Api.Entities.NaturalCustomer", b =>
                {
                    b.HasBaseType("Cartsy.Api.Entities.Customer");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character(11)")
                        .IsFixedLength();

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("Customers", t =>
                        {
                            t.Property("Type")
                                .HasColumnName("NaturalCustomer_Type");
                        });

                    b.HasDiscriminator().HasValue(2);

                    b.HasData(
                        new
                        {
                            Id = 5,
                            AddressId = 8,
                            CellPhone = "345-678-9012",
                            Email = "natural1@example.com",
                            HomePhone = "765-432-1098",
                            Name = "Natural Customer 1",
                            Status = true,
                            TypeDiscriminator = 2,
                            CPF = "98765432109",
                            Type = "natural"
                        },
                        new
                        {
                            Id = 6,
                            AddressId = 9,
                            CellPhone = "345-678-9012",
                            Email = "natural2@example.com",
                            HomePhone = "765-432-1098",
                            Name = "Natural Customer 2",
                            Status = true,
                            TypeDiscriminator = 2,
                            CPF = "98765432109",
                            Type = "natural"
                        });
                });

            modelBuilder.Entity("Cartsy.Api.Entities.Consumer", b =>
                {
                    b.HasOne("Cartsy.Api.Entities.Address", "Address")
                        .WithOne("Consumer")
                        .HasForeignKey("Cartsy.Api.Entities.Consumer", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Cartsy.Api.Entities.Customer", b =>
                {
                    b.HasOne("Cartsy.Api.Entities.Address", "Address")
                        .WithOne("Customer")
                        .HasForeignKey("Cartsy.Api.Entities.Customer", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Cartsy.Api.Entities.Item", b =>
                {
                    b.HasOne("Cartsy.Api.Entities.Store", "Store")
                        .WithMany("Items")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cartsy.Api.Entities.ItemType", "Type")
                        .WithMany("Items")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Cartsy.Api.Entities.Order", b =>
                {
                    b.HasOne("Cartsy.Api.Entities.Consumer", "Consumer")
                        .WithMany("Orders")
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cartsy.Api.Entities.OrderStatus", "Status")
                        .WithMany("Orders")
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cartsy.Api.Entities.Store", "Store")
                        .WithMany("Orders")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consumer");

                    b.Navigation("Status");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Cartsy.Api.Entities.OrderItem", b =>
                {
                    b.HasOne("Cartsy.Api.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cartsy.Api.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Cartsy.Api.Entities.Store", b =>
                {
                    b.HasOne("Cartsy.Api.Entities.Address", "Address")
                        .WithOne("Store")
                        .HasForeignKey("Cartsy.Api.Entities.Store", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cartsy.Api.Entities.Customer", "Customer")
                        .WithOne("Store")
                        .HasForeignKey("Cartsy.Api.Entities.Store", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Cartsy.Api.Entities.StoreService", b =>
                {
                    b.HasOne("Cartsy.Api.Entities.AdditionalServices", null)
                        .WithMany()
                        .HasForeignKey("ServicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cartsy.Api.Entities.Store", null)
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cartsy.Api.Entities.Address", b =>
                {
                    b.Navigation("Consumer");

                    b.Navigation("Customer");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Cartsy.Api.Entities.Consumer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Cartsy.Api.Entities.Customer", b =>
                {
                    b.Navigation("Store")
                        .IsRequired();
                });

            modelBuilder.Entity("Cartsy.Api.Entities.ItemType", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Cartsy.Api.Entities.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Cartsy.Api.Entities.Store", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
